<snippet>
	<content><![CDATA[
ll f(int x){
	ll ans(0);
	forn(i,n-1){
		ll fir = a[i];
		ll sec = a[i+1];
		if(fir == -1) fir = x;
		if(sec == -1) sec = x;
		ans = max(ans,abs(sec-fir));
	}
	return ans;
}

int ternary_search(int l, int r) {
               //set the error limit here
    while (r >= l) {
        // Find the mid1 and mid2
        int mid1 = l + (r - l) / 3;
        int mid2 = r - (r - l) / 3;
        // Check if key is present at any mid
        int f1 = f(mid1),f2 = f(mid2);
        // cout << mid1 << " " << mid2 << " " << f1 << " " << f2 << endl;
        //if not at mid
        if (f1 < f2) {
            // The key lies in between r and mid1
            r = mid2 - 1;
        }
        else if (f1 > f2) {
            // The key lies in between mid2 and r
            l = mid1 + 1;
        }
        else {
            // The key lies in between mid1 and mid2
            l = mid1 + 1;
            r = mid2 - 1;
        }
    }
    return (l+r)/2;                    //return the maximum of f(x) in [l, r]
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>ternary_search</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
